# CodiesVibe Backend Dockerfile
# Multi-stage build for NestJS application with development and production targets

# Build arguments for image metadata
ARG BUILD_DATE
ARG GIT_COMMIT
ARG VERSION

# Dependencies stage - Install all dependencies for caching
FROM node:18-alpine AS dependencies

# Set working directory
WORKDIR /app

# Copy package files for dependency caching
COPY backend/nestjs-api/package*.json ./

# Install dependencies using npm ci for reproducible builds
RUN npm ci

# Copy shared types for building
COPY backend/shared ./shared

# Builder stage - Build the TypeScript application
FROM dependencies AS backend-builder

# Copy backend source code first
COPY backend/nestjs-api ./

# Copy shared types to the correct location relative to the backend
COPY backend/shared ../shared

# Build the NestJS application
RUN npm run build

# Seeding stage - For database seeding in production
FROM backend-builder AS seeding

# Keep source files for seeding scripts
# This stage includes both built files and source files

# Production stage - Optimized runtime image
FROM node:18-alpine AS production

# Set working directory
WORKDIR /app

# Copy package files
COPY backend/nestjs-api/package*.json ./

# Install only production dependencies (skip prepare scripts to avoid husky issues)
RUN npm ci --only=production --ignore-scripts && npm cache clean --force

# Copy built application from builder stage
COPY --from=backend-builder /app/dist ./dist
COPY --from=backend-builder /app/shared ./shared

# Copy health check script
COPY backend/nestjs-api/healthcheck.js ./

# Create non-root user for security
RUN addgroup -g 1001 nodejs && adduser -S nodejs -u 1001

# Create necessary directories and set permissions
RUN mkdir -p /app/logs && chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Expose application port
EXPOSE 4001

# Add image metadata
LABEL org.opencontainers.image.title="CodiesVibe Backend (Production)"
LABEL org.opencontainers.image.description="Production-ready NestJS backend for CodiesVibe"
LABEL org.opencontainers.image.version="${VERSION}"
LABEL org.opencontainers.image.created="${BUILD_DATE}"
LABEL org.opencontainers.image.revision="${GIT_COMMIT}"
LABEL org.opencontainers.image.source="https://github.com/foyzulkarim/codiesvibe"
LABEL org.opencontainers.image.licenses="MIT"

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=20s --retries=3 \
    CMD node healthcheck.js

# Start the application
CMD ["node", "dist/src/main.js"]