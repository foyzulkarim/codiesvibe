# CodiesVibe Backend Dockerfile
# Multi-stage build for NestJS application with development and production targets

# Build arguments for image metadata
ARG BUILD_DATE
ARG GIT_COMMIT
ARG VERSION

# Dependencies stage - Install all dependencies for caching
FROM node:18-alpine AS dependencies

# Set working directory
WORKDIR /app

# Copy package files for dependency caching
COPY backend/package*.json ./

# Install dependencies using npm ci for reproducible builds
RUN npm ci

# Builder stage - Build the TypeScript application
FROM dependencies AS backend-builder

# Copy backend source code
COPY backend/ ./

# Build the NestJS application
RUN npm run build

# Development stage - Hot reload development environment with debugging
FROM dependencies AS development

# Copy backend source code for development
COPY backend/ ./

# Expose development server port and debug port
EXPOSE 4000 9229

# Add image metadata
LABEL org.opencontainers.image.title="CodiesVibe Backend (Development)"
LABEL org.opencontainers.image.description="NestJS development environment with hot reload and debugging"
LABEL org.opencontainers.image.version="${VERSION:-dev}"
LABEL org.opencontainers.image.created="${BUILD_DATE}"
LABEL org.opencontainers.image.source="https://github.com/foyzulkarim/codiesvibe"

# Set environment variables
ENV NODE_ENV=development
ENV PORT=4000

# Start development server with watch mode and debugging
CMD ["npm", "run", "start:debug"]

# Production stage - Optimized production image with health checks
FROM node:18-alpine AS production

# Create non-root user for security
RUN addgroup -g 1001 nodejs && adduser -S nodejs -u 1001

# Set working directory
WORKDIR /app

# Copy package files
COPY backend/package*.json ./

# Install only production dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy built application from builder stage
COPY --from=backend-builder --chown=nodejs:nodejs /app/dist ./dist

# Copy shared types directory for runtime if needed
COPY --from=backend-builder --chown=nodejs:nodejs /app/shared ./shared

# Copy health check script
COPY --chown=nodejs:nodejs backend/healthcheck.js ./healthcheck.js

# Switch to non-root user
USER nodejs

# Expose production port
EXPOSE 4000

# Add image metadata
LABEL org.opencontainers.image.title="CodiesVibe Backend (Production)"
LABEL org.opencontainers.image.description="NestJS production build with health checks and security"
LABEL org.opencontainers.image.version="${VERSION:-latest}"
LABEL org.opencontainers.image.created="${BUILD_DATE}"
LABEL org.opencontainers.image.source="https://github.com/foyzulkarim/codiesvibe"

# Set environment variables
ENV NODE_ENV=production
ENV PORT=4000

# Health check using our custom script
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD node healthcheck.js || exit 1

# Start production server
CMD ["node", "dist/src/main.js"]