# Server Configuration
PORT=4000

# Search API Configuration
SEARCH_API_URL=http://localhost:4004

# Database Configuration
# Infrastructure integration (default for local development with npm run infra:start)
MONGODB_URI=mongodb://admin:password123@localhost:27017/codiesvibe?authSource=admin
# Standalone MongoDB (uncomment if not using infrastructure)
# MONGODB_URI=mongodb://localhost:27017/nestjs-api

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-change-in-production
JWT_EXPIRES_IN=24h

# GitHub OAuth Configuration
GITHUB_CLIENT_ID=your_github_client_id
GITHUB_CLIENT_SECRET=your_github_client_secret
GITHUB_CALLBACK_URL=http://localhost:4000/api/auth/github/callback

# Environment
NODE_ENV=development

# Production Security Settings
# Uncomment these for production
# NODE_ENV=production
# ALLOWED_DOMAINS=codiesvibe.com,www.codiesvibe.com,api.codiesvibe.com
# COOKIE_SECRET=your-super-secure-cookie-secret-32-chars-min
# CSRF_SECRET=your-super-secure-csrf-secret-32-chars-min

# Application Metadata
VITE_APP_VERSION=${npm_package_version}
VITE_BUILD_DATE=$(date)
VITE_GIT_COMMIT=$(git rev-parse --short HEAD)

# Backend Security
COOKIE_SECRET=your-cookie-secret-min-32-chars-change-in-production
CSRF_SECRET=your-csrf-secret-min-32-chars-change-in-production
RATE_LIMIT_WINDOW=900000  # 15 minutes
RATE_LIMIT_MAX=100

# Session Management
SESSION_TIMEOUT=900000  # 15 minutes in milliseconds
ALLOWED_DOMAINS=yourdomain.com,www.yourdomain.com,app.yourdomain.com

# Production Settings
TRUST_PROXY=true
SHUTDOWN_TIMEOUT=30000

# Infrastructure Integration (Docker Compose)
# Uncomment these when using docker-compose.infra.yml or Phase 1 containers

# Redis Configuration (Infrastructure integration)
REDIS_URL=redis://:redis123@localhost:6379
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=redis123

# Monitoring Endpoints
# PROMETHEUS_URL=http://prometheus:9090
# GRAFANA_URL=http://grafana:3000
# LOKI_URL=http://loki:3100

# Development Tools (Infrastructure)
# MONGO_EXPRESS_URL=http://mongo-express:8081
# MAILHOG_SMTP_HOST=mailhog
# MAILHOG_SMTP_PORT=1025
# MAILHOG_WEB_URL=http://mailhog:8025

# Network Configuration
# When running in containers, use these for service-to-service communication:
# FRONTEND_URL=http://frontend:3000  # Development
# FRONTEND_URL=http://nginx:80       # Production (behind nginx)
# BACKEND_URL=http://backend:4000    # Internal API calls

# Container Environment Overrides
# These override the above when running in containerized environments
# NODE_ENV=development|production
# LOG_LEVEL=debug|info|warn|error