# CodiesVibe Frontend Dockerfile
# Multi-stage build for React + Vite application with development and production targets

# Build arguments for image metadata
ARG BUILD_DATE
ARG GIT_COMMIT
ARG VERSION

# Dependencies stage - Install all dependencies for caching
FROM node:18-alpine AS dependencies

# Set working directory
WORKDIR /app

# Copy package files for dependency caching
COPY package*.json ./

# Install dependencies using npm ci for reproducible builds
RUN npm ci

# Builder stage - Build the TypeScript application  
FROM dependencies AS builder

# Copy source code first
COPY . .

# Copy only the shared types directory that already exists (after source to override any potential conflicts)
COPY backend/shared ./backend/shared

# Build the application
RUN npm run build

# Development stage - Hot reload development environment
FROM dependencies AS development

# Install development dependencies globally for better performance
RUN npm install -g nodemon

# Copy source code for development
COPY . .

# Copy shared types from backend directory for development
COPY backend/shared ./backend/shared

# Create non-root user for security (even in development)
RUN addgroup -g 1001 nodejs && adduser -S nodejs -u 1001
RUN chown -R nodejs:nodejs /app

# Switch to non-root user
USER nodejs

# Expose development server port and HMR websocket port
EXPOSE 3000
EXPOSE 5173

# Add image metadata
LABEL org.opencontainers.image.title="CodiesVibe Frontend (Development)"
LABEL org.opencontainers.image.description="React + Vite development environment with hot reload"
LABEL org.opencontainers.image.version="${VERSION:-dev}"
LABEL org.opencontainers.image.created="${BUILD_DATE:-}"
LABEL org.opencontainers.image.source="https://github.com/foyzulkarim/codiesvibe"

# Set environment variables for development
ENV NODE_ENV=development
ENV VITE_API_URL=http://backend:4000
ENV VITE_HMR_HOST=0.0.0.0
ENV VITE_HMR_PORT=5173

# Start development server with hot reload and host binding
CMD ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "3000"]

# Production stage - Nginx/Alpine optimized image with minimal footprint
FROM nginx:alpine AS production

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Create nginx config for SPA routing
RUN echo 'server { \
    listen 80; \
    root /usr/share/nginx/html; \
    index index.html; \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    # Enable gzip compression \
    gzip on; \
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; \
}' > /etc/nginx/conf.d/default.conf

# Remove default nginx config
RUN rm /etc/nginx/conf.d/default.conf.dpkg-dist 2>/dev/null || true

# Add image metadata
LABEL org.opencontainers.image.title="CodiesVibe Frontend (Production)"
LABEL org.opencontainers.image.description="React + Vite production build served with nginx/alpine - highly optimized"
LABEL org.opencontainers.image.version="${VERSION:-latest}"
LABEL org.opencontainers.image.created="${BUILD_DATE:-}"
LABEL org.opencontainers.image.revision="${GIT_COMMIT:-}"
LABEL org.opencontainers.image.source="https://github.com/foyzulkarim/codiesvibe"
LABEL org.opencontainers.image.vendor="CodiesVibe"
LABEL org.opencontainers.image.licenses="MIT"

# Expose port 80 (nginx default)
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
