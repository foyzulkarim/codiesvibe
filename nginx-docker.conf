# Ultra-Simple Nginx Configuration for CodeVibe (Docker Compose)
# Adapted for Docker networking with service names

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Basic settings
    sendfile on;
    keepalive_timeout 65;
    
    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Default server for localhost (development/testing)
    server {
        listen 80 default_server;
        server_name localhost _;
        
        # API routes
        location /api/ {
            proxy_pass http://backend:4000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check endpoint
        location /health {
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Serve frontend files
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }
    }
    
    # Frontend server (codiesvibe.com)
    server {
        listen 80;
        server_name codiesvibe.com www.codiesvibe.com;
        
        # Serve frontend files from Docker volume
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }
    }
    
    # API server (api.codiesvibe.com)
    server {
        listen 80;
        server_name api.codiesvibe.com;
        
        # All requests go to backend service
        location / {
            proxy_pass http://backend:4000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}