# Promtail Configuration for CodiesVibe
# Log collection and shipping to Loki Extended

# Server configuration
server:
  http_listen_port: 9080
  grpc_listen_port: 0
  log_level: info

# Positions file (for log tailing state)
positions:
  filename: /tmp/positions/positions.yaml

# Loki client configuration
clients:
  - url: http://loki-extended:3100/loki/api/v1/push
    tenant_id: codiesvibe
    batchwait: 1s
    batchsize: 1048576
    external_labels:
      job: promtail
      environment: extended
      host: ${HOSTNAME}

# Scrape configurations
scrape_configs:
  # Docker container logs
  - job_name: docker
    static_configs:
      - targets:
          - localhost
        labels:
          job: docker
          __path__: /var/lib/docker/containers/*/*.log

    # Pipeline stages for Docker logs
    pipeline_stages:
      # Parse Docker JSON logs
      - json:
          expressions:
            output: log
            stream: stream
            timestamp: time
      
      # Extract container information
      - regex:
          expression: '/var/lib/docker/containers/(?P<container_id>[^/]+)/'
          source: filename
      
      # Add container labels
      - docker:
          host: unix:///var/run/docker.sock
          refresh_interval: 5s
          include_container_name: true
          include_container_labels: true
      
      # Set timestamp
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      
      # Add labels
      - labels:
          stream:
          container_id:
          container_name:

  # System logs
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          __path__: /var/log/syslog
    
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\S+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<service>\S+):\s+(?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: Jan 2 15:04:05
      - labels:
          hostname:
          service:

  # Application-specific logs
  - job_name: codiesvibe-backend
    static_configs:
      - targets:
          - localhost
        labels:
          job: codiesvibe-backend
          __path__: /var/log/codiesvibe/backend.log
    
    pipeline_stages:
      # Parse JSON logs from NestJS
      - json:
          expressions:
            level: level
            message: message
            context: context
            timestamp: timestamp
            trace: trace
      
      # Set log level
      - labels:
          level:
          context:
      
      # Filter sensitive information
      - replace:
          expression: '(password|token|secret|key)=\S+'
          replace: '${1}=***'

  # Nginx access logs
  - job_name: nginx-access
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-access
          __path__: /var/log/nginx/access.log
    
    pipeline_stages:
      # Parse Nginx combined log format
      - regex:
          expression: '^(?P<remote_addr>\S+)\s+-\s+(?P<remote_user>\S+)\s+\[(?P<time_local>[^\]]+)\]\s+"(?P<method>\S+)\s+(?P<request_uri>\S+)\s+(?P<protocol>\S+)"\s+(?P<status>\d+)\s+(?P<body_bytes_sent>\d+)\s+"(?P<http_referer>[^"]*)"\s+"(?P<http_user_agent>[^"]*)"'
      
      # Parse timestamp
      - timestamp:
          source: time_local
          format: 02/Jan/2006:15:04:05 -0700
      
      # Add labels
      - labels:
          method:
          status:
          remote_addr:

  # Nginx error logs
  - job_name: nginx-error
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx-error
          __path__: /var/log/nginx/error.log
    
    pipeline_stages:
      # Parse Nginx error log format
      - regex:
          expression: '^(?P<timestamp>\d{4}/\d{2}/\d{2}\s+\d{2}:\d{2}:\d{2})\s+\[(?P<level>\w+)\]\s+(?P<pid>\d+)#(?P<tid>\d+):\s+(?P<message>.*)$'
      
      # Parse timestamp
      - timestamp:
          source: timestamp
          format: 2006/01/02 15:04:05
      
      # Add labels
      - labels:
          level:
          pid:

# Target configuration for service discovery
target_config:
  sync_period: 10s